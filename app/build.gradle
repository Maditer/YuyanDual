plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

// 强制 Kotlin 使用 JDK 17 工具链
kotlin {
    jvmToolchain(17)
}

android {
    compileSdk 36
    namespace 'com.yuyan'
    defaultConfig {
        applicationId "com.yuyan.pinyin"
        minSdk 23
        targetSdk 36
        versionCode Integer.valueOf(versionCodeDate())
        versionName versionNameDate()

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        ndk {
            abiFilters 'arm64-v8a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        lintOptions {
            abortOnError false
        }
    }
    
    packagingOptions {
        jniLibs {
            useLegacyPackaging true
        }
    }

    // 读取 keystore 配置（如果存在）
    def keystorePropsFile = rootProject.file("keystore/keystore.properties")
    def keystoreProps = new Properties()
    if (keystorePropsFile.exists()) {
        keystoreProps.load(new FileInputStream(keystorePropsFile))
    }

    signingConfigs {
        if (keystorePropsFile.exists()) {
            release {
                storeFile file("${rootProject.projectDir}/keystore/" + keystoreProps["storeFile"]) 
                storePassword keystoreProps["storePassword"]
                keyAlias keystoreProps["keyAlias"]
                keyPassword keystoreProps["keyPassword"]
                v1SigningEnabled true
                v2SigningEnabled true
            }
        }
    }

    flavorDimensions = ["default"]
    productFlavors {
        dualscreen {
            dimension "default"
            applicationIdSuffix  ".online"
        }
    }

    buildTypes {
        release {
            // 混淆
            minifyEnabled false
            shrinkResources false
            applicationIdSuffix  ".release"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.cfg'
            if (keystorePropsFile.exists()) {
                signingConfig signingConfigs.release
            }
        }

        debug {
            applicationIdSuffix ".debug"
            // 不使用 release 签名；使用默认 debug keystore
        }

    }
    //    第三方库使用java1.8
    compileOptions {
        sourceCompatibility 17
        targetCompatibility 17
    }
    // 强制 Kotlin 编译目标与 Java 一致
    kotlinOptions {
        jvmTarget = '17'
    }
    android.applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "yuyanIme_${versionCodeDate()}_${variant.getProductFlavors()[0].name}_${variant.buildType.name}.apk"   // offline      online
        }
    }
}

static def versionCodeDate() {
    return new Date().format("yyyyMMddHH", TimeZone.getTimeZone("GMT+8"))
}

static def versionNameDate() {
    return new Date().format("yyyyMMdd.HH", TimeZone.getTimeZone("GMT+8"))
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':yuyansdk')
}
