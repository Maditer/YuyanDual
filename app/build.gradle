plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.devtools.ksp'
    id 'kotlin-parcelize'
    id 'kotlinx-serialization'
}

// 强制 Kotlin 使用 JDK 17 工具链
kotlin {
    jvmToolchain(17)
}

android {
    compileSdk 36
    namespace 'com.yuyan.imemodule'
    defaultConfig {
        applicationId "com.yuyan.pinyin"
        minSdk 23
        targetSdk 36
        versionCode Integer.valueOf(versionCodeDate())
        versionName versionNameDate()

        // 与SDK保持一致的 BuildConfig 字段，供代码引用
        buildConfigField "String", "versionName", "\"${versionNameDate()}\""
        buildConfigField "String", "AppCommitHead", "\"${getAppGitHead()}\""
        buildConfigField "String", "AppBuildTime", "\"${getAppBuildTime()}\""

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        ndk {
            abiFilters 'arm64-v8a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        lintOptions {
            abortOnError false
        }
    }
    
    packagingOptions {
        jniLibs {
            useLegacyPackaging true
        }
    }

    // 读取 keystore 配置（如果存在）
    def keystorePropsFile = rootProject.file("keystore/keystore.properties")
    def keystoreProps = new Properties()
    if (keystorePropsFile.exists()) {
        keystoreProps.load(new FileInputStream(keystorePropsFile))
    }

    signingConfigs {
        if (keystorePropsFile.exists()) {
            release {
                storeFile file("${rootProject.projectDir}/keystore/" + keystoreProps["storeFile"]) 
                storePassword keystoreProps["storePassword"]
                keyAlias keystoreProps["keyAlias"]
                keyPassword keystoreProps["keyPassword"]
                v1SigningEnabled true
                v2SigningEnabled true
            }
        }
    }

    flavorDimensions = ["default"]
    productFlavors {
        online {
            dimension "default"
            applicationIdSuffix  ".online"
            // 暴露SDK资源到app：图标
            resValue("drawable", "app_icon", "@drawable/ic_sdk_launcher")
        }
        offline {
            dimension "default"
            // SDK中标记离线模式
            buildConfigField "Boolean", "offline", "true"
            resValue("drawable", "app_icon", "@drawable/ic_sdk_launcher_debug")
        }
        dualscreen {
            dimension "default"
            applicationIdSuffix  ".online"
            buildConfigField "Boolean", "offline", "false"
            resValue("drawable", "app_icon", "@drawable/ic_sdk_launcher")
        }
    }

    buildTypes {
        release {
            // 混淆
            minifyEnabled false
            shrinkResources false
            applicationIdSuffix  ".release"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.cfg'
            if (keystorePropsFile.exists()) {
                signingConfig signingConfigs.release
            }
            // 与SDK一致的应用名
            resValue("string", "app_name", "@string/ime_yuyan_name")
        }

        debug {
            applicationIdSuffix ".debug"
            // 与SDK一致的应用名（debug）
            resValue("string", "app_name", "@string/ime_yuyan_name_debug")
        }

    }
    //    第三方库使用java1.8
    compileOptions {
        sourceCompatibility 17
        targetCompatibility 17
    }
    // 强制 Kotlin 编译目标与 Java 一致
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    // 直接聚合SDK源码与资源，消除模块嵌套
    sourceSets {
        main {
            java.srcDirs += ['../yuyansdk/src/main/java']
            res.srcDirs += ['../yuyansdk/src/main/res']
            assets.srcDirs += ['../yuyansdk/src/main/assets']
            jniLibs.srcDirs = ['../yuyansdk/libs']
        }
        offline {
            jniLibs.srcDirs += ['../yuyansdk/src/offline/libs']
            manifest.srcFile('../yuyansdk/src/offline/AndroidManifest.xml')
            res.srcDirs += ['../yuyansdk/src/offline/res']
        }
        online {
            jniLibs.srcDirs += ['../yuyansdk/src/online/libs']
            manifest.srcFile('../yuyansdk/src/online/AndroidManifest.xml')
            res.srcDirs += ['../yuyansdk/src/online/res']
        }
        dualscreen {
            manifest.srcFile('../yuyansdk/src/dualscreen/AndroidManifest.xml')
            res.srcDirs += ['../yuyansdk/src/dualscreen/res']
        }
    }

    android.applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "yuyanIme_${versionCodeDate()}_${variant.getProductFlavors()[0].name}_${variant.buildType.name}.apk"   // offline      online
        }
    }
}

static def versionCodeDate() {
    return new Date().format("yyyyMMddHH", TimeZone.getTimeZone("GMT+8"))
}

static def versionNameDate() {
    return new Date().format("yyyyMMdd.HH", TimeZone.getTimeZone("GMT+8"))
}

// 与SDK保持一致：提供git信息
static def getAppGitHead() {
    return "git rev-parse HEAD".execute().text.trim()
}

static def getAppBuildTime() {
    return "git log -1 --pretty=%ai".execute().text.trim()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // 移除模块依赖，直接使用源码聚合
    // implementation project(':yuyansdk')

    // SDK原有依赖
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.viewpager2:viewpager2:1.1.0'
    implementation 'androidx.emoji2:emoji2:1.5.0'
    implementation 'androidx.emoji2:emoji2-views:1.5.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:2.0.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.9.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.9.0"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.8.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.8.5'
    implementation 'com.louiscad.splitties:splitties-resources:3.0.0'
    implementation 'com.louiscad.splitties:splitties-views-dsl-recyclerview:3.0.0'
    implementation 'com.louiscad.splitties:splitties-views-dsl-constraintlayout:3.0.0'
    implementation 'com.louiscad.splitties:splitties-views-dsl-appcompat:3.0.0'
    implementation 'com.louiscad.splitties:splitties-bitflags:3.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.7'
    implementation "androidx.room:room-runtime:2.6.1"
    ksp "androidx.room:room-compiler:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"
}
